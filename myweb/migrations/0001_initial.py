# Generated by Django 5.2.3 on 2025-07-11 15:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='StockIndex',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('market', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('google_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('profile_picture', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('market', models.CharField(max_length=50)),
                ('sector', models.CharField(blank=True, max_length=100, null=True)),
                ('industry', models.CharField(blank=True, max_length=200, null=True)),
                ('indices', models.ManyToManyField(related_name='companies', to='myweb.stockindex')),
            ],
        ),
        migrations.CreateModel(
            name='TradingResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_code', models.CharField(max_length=10)),
                ('stock_name', models.CharField(max_length=100)),
                ('trade_type', models.CharField(choices=[('BUY', '매수'), ('SELL', '매도')], max_length=10)),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('profit_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('trade_date', models.DateTimeField()),
                ('review', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_results', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-trade_date'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trading_server_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_code', models.CharField(max_length=10)),
                ('stock_name', models.CharField(max_length=100)),
                ('memo', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_stocks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'stock_code')},
            },
        ),
        migrations.CreateModel(
            name='StockAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('ma50', models.FloatField(default=0.0)),
                ('ma150', models.FloatField(default=0.0)),
                ('ma200', models.FloatField(default=0.0)),
                ('rsScore', models.FloatField(default=0.0)),
                ('rsScore1m', models.FloatField(default=0.0)),
                ('rsScore3m', models.FloatField(default=0.0)),
                ('rsScore6m', models.FloatField(default=0.0)),
                ('rsScore12m', models.FloatField(default=0.0)),
                ('rsRank', models.FloatField(default=0.0)),
                ('rsRank1m', models.FloatField(default=0.0)),
                ('rsRank3m', models.FloatField(default=0.0)),
                ('rsRank6m', models.FloatField(default=0.0)),
                ('rsRank12m', models.FloatField(default=0.0)),
                ('max_52w', models.FloatField(default=0.0)),
                ('min_52w', models.FloatField(default=0.0)),
                ('max_52w_date', models.DateField(blank=True, null=True)),
                ('min_52w_date', models.DateField(blank=True, null=True)),
                ('atr', models.FloatField(default=0.0)),
                ('is_minervini_trend', models.BooleanField(default=False)),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='myweb.company')),
            ],
            options={
                'db_table': 'stock_analysis',
                'ordering': ['code', 'date'],
                'constraints': [models.UniqueConstraint(fields=('code', 'date'), name='uniqueAnalysis_code_date')],
            },
        ),
        migrations.CreateModel(
            name='StockFinancialStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=4)),
                ('quarter', models.CharField(max_length=3)),
                ('statement_type', models.CharField(max_length=10)),
                ('account_name', models.CharField(max_length=20)),
                ('amount', models.BigIntegerField()),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial', to='myweb.company')),
            ],
            options={
                'db_table': 'stock_financial',
                'ordering': ['year', 'quarter'],
                'constraints': [models.UniqueConstraint(fields=('code', 'year', 'quarter', 'statement_type', 'account_name'), name='uniqueFinancial_code_year_quarter')],
            },
        ),
        migrations.CreateModel(
            name='IndexOHLCV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('open', models.IntegerField()),
                ('high', models.IntegerField()),
                ('low', models.IntegerField()),
                ('close', models.IntegerField()),
                ('volume', models.IntegerField()),
                ('change', models.FloatField(default=0.0)),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='index_ohlcv', to='myweb.stockindex')),
            ],
            options={
                'db_table': 'index_ohlcv',
                'ordering': ['code', 'date'],
                'constraints': [models.UniqueConstraint(fields=('code', 'date'), name='unique_index_date')],
            },
        ),
        migrations.CreateModel(
            name='StockOHLCV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('open', models.IntegerField()),
                ('high', models.IntegerField()),
                ('low', models.IntegerField()),
                ('close', models.IntegerField()),
                ('volume', models.IntegerField()),
                ('change', models.FloatField(default=0.0)),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ohlcv', to='myweb.company')),
            ],
            options={
                'db_table': 'stock_ohlcv',
                'ordering': ['code', 'date'],
                'constraints': [models.UniqueConstraint(fields=('code', 'date'), name='unique_code_date')],
            },
        ),
    ]
