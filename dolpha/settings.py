"""
Django settings for dolpha project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import platform
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ophb6jnq-m0ahk(8z&dw9#k1q52gaar8(s16+9-x&t)72*f27='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myweb',
    'django_apscheduler',
]

# APScheduler 설정
APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"  # 관리자 인터페이스에서 표시되는 시간 형식
APSCHEDULER_RUN_NOW_TIMEOUT = 25  # 작업 실행 타임아웃 (초 단위, 필요에 따라 조정)
SCHEDULER_DEFAULT = True  # 앱 시작 시 스케줄러 자동 실행

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dolpha.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dolpha.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        # 'NAME': 'dolpha',  # 데이터베이스 이름
        # 'USER': 'root',  # 또는 'root'
        # 'PASSWORD': 'qwe123!@#',  # 사용자 비밀번호
        # 'HOST': 'localhost',
        # 'PORT': '3306',  # MariaDB 기본 포트
        # 'OPTIONS': {
        #     'charset': 'utf8mb4',
        # },
        
        'NAME': 'dolpha_db',  # 데이터베이스 이름
        'USER': 'dolpha',  # 또는 'root'
        'PASSWORD': 'dolpha123',  # 사용자 비밀번호
        'HOST': 'localhost',
        'PORT': '3306',  # MariaDB 기본 포트
    }
}

# 환경 변수 또는 OS에 따라 DB 설정 변경
if platform.system() in ['Windows', 'Darwin']:  # Windows 또는 macOS
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.mysql',  # 또는 'django.db.backends.mysql' (MariaDB와 호환)
        'NAME': 'dolpha_db',  # 데이터베이스 이름
        'USER': 'dolpha',  # 또는 'root'
        'PASSWORD': 'dolpha123',  # 사용자 비밀번호
        'HOST': '218.152.32.218',
        'PORT': '3306',  # MariaDB 기본 포트
        # 'NAME': 'dolpha',  # 데이터베이스 이름
        # 'USER': 'root',  # 또는 'root'
        # 'PASSWORD': 'qwe123!@#',  # 사용자 비밀번호
        # 'HOST': 'localhost',
        # 'PORT': '3306',  # MariaDB 기본 포트
    }
else:  # Ubuntu (Docker 환경)
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.mysql',  # 또는 'django.db.backends.mysql'
        'NAME': 'dolpha_db',
        'USER': 'dolpha',
        'PASSWORD': 'dolpha123',
        'HOST': 'mariadb',
        'PORT': 3306,
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
